{:rename-macros {}, :renames {}, :externs {Math {PI {}, acos {}, sqrt {}}}, :use-macros {}, :excludes #{}, :name space.calc, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {distance {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([p1 p2])), :doc "Returns the distance of two given points."}, :name space.calc/distance, :variadic false, :file "src/space/calc.cljs", :end-column 15, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2])), :doc "Returns the distance of two given points."}, vec- {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 62, :column 7, :end-line 62, :end-column 11, :arglists (quote ([v])), :doc "Returns -vec."}, :name space.calc/vec-, :variadic false, :file "src/space/calc.cljs", :end-column 11, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Returns -vec."}, vec+ {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 42, :column 7, :end-line 42, :end-column 11, :arglists (quote ([& vs])), :doc "Returns the sum of given vectors.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(vs)], :arglists ([& vs]), :arglists-meta (nil)}}, :name space.calc/vec+, :variadic true, :file "src/space/calc.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(vs)], :arglists ([& vs]), :arglists-meta (nil)}, :method-params [(vs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists ([& vs]), :doc "Returns the sum of given vectors."}, arccos {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([x])), :doc "Calculates the arccosin of the number."}, :name space.calc/arccos, :variadic false, :file "src/space/calc.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Calculates the arccosin of the number."}, vecmode {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 52, :column 7, :end-line 52, :end-column 14, :arglists (quote ([v])), :doc "Returns the mode of the vector."}, :name space.calc/vecmode, :variadic false, :file "src/space/calc.cljs", :end-column 14, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Returns the mode of the vector."}, rotation-by-vector {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 77, :column 7, :end-line 77, :end-column 25, :arglists (quote ([v])), :doc "Returns the clockwice rotation degree from x-axis of the vector."}, :name space.calc/rotation-by-vector, :variadic false, :file "src/space/calc.cljs", :end-column 25, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Returns the clockwice rotation degree from x-axis of the vector."}, sqrt {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 22, :column 7, :end-line 22, :end-column 11, :arglists (quote ([x])), :doc "Calculates the sqrt of the number."}, :name space.calc/sqrt, :variadic false, :file "src/space/calc.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Calculates the sqrt of the number."}, PI {:name space.calc/PI, :file "src/space/calc.cljs", :line 15, :column 1, :end-line 15, :end-column 8, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 15, :column 6, :end-line 15, :end-column 8}, :tag js}, cos-of {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 67, :column 7, :end-line 67, :end-column 13, :arglists (quote ([v1 v2])), :doc "Returns the cosine of the angle of two vectors."}, :name space.calc/cos-of, :variadic false, :file "src/space/calc.cljs", :end-column 13, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2])), :doc "Returns the cosine of the angle of two vectors."}, vecdot {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 37, :column 7, :end-line 37, :end-column 13, :arglists (quote ([v1 v2])), :doc "Returns the dot product of the two vectors."}, :name space.calc/vecdot, :variadic false, :file "src/space/calc.cljs", :end-column 13, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2])), :doc "Returns the dot product of the two vectors."}, vecdiv {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 47, :column 7, :end-line 47, :end-column 13, :arglists (quote ([v n])), :doc "Returns vector / num."}, :name space.calc/vecdiv, :variadic false, :file "src/space/calc.cljs", :end-column 13, :method-params ([v n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v n])), :doc "Returns vector / num."}, angle-of {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 72, :column 7, :end-line 72, :end-column 15, :arglists (quote ([v1 v2])), :doc "Returns the angle of the two vectors."}, :name space.calc/angle-of, :variadic false, :file "src/space/calc.cljs", :end-column 15, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2])), :doc "Returns the angle of the two vectors."}, square {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 27, :column 7, :end-line 27, :end-column 13, :arglists (quote ([x])), :doc "Calculates the square of the number."}, :name space.calc/square, :variadic false, :file "src/space/calc.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Calculates the square of the number."}, vec* {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space-game/src/space/calc.cljs", :line 57, :column 7, :end-line 57, :end-column 11, :arglists (quote ([n v])), :doc "Returns num * vector."}, :name space.calc/vec*, :variadic false, :file "src/space/calc.cljs", :end-column 11, :method-params ([n v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n v])), :doc "Returns num * vector."}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}