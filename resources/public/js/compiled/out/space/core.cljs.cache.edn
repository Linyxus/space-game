{:rename-macros {}, :renames {}, :externs {document {getElementById {}, body {clientWidth {}, clientHeight {}}}, Object {width {}, height {}, offsetLeft {}, offsetTop {}, addEventListener {}}, setInterval {}}, :use-macros {}, :excludes #{}, :name space.core, :imports nil, :requires {drawer space.drawer, space.drawer space.drawer, game space.game, space.game space.game}, :cljs.spec/speced-vars [], :uses nil, :defs {app-state {:name space.core/app-state, :file "src/space/core.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :meta {:file "/home/linyxus/dev/clojure/space/src/space/core.cljs", :line 11, :column 10, :end-line 11, :end-column 19}, :tag any}, canvas-dom {:name space.core/canvas-dom, :file "src/space/core.cljs", :line 13, :column 1, :end-line 13, :end-column 16, :meta {:file "/home/linyxus/dev/clojure/space/src/space/core.cljs", :line 13, :column 6, :end-line 13, :end-column 16}, :tag js}, canvas-info {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space/src/space/core.cljs", :line 15, :column 7, :end-line 15, :end-column 18, :arglists (quote ([dom]))}, :name space.core/canvas-info, :variadic false, :file "src/space/core.cljs", :end-column 18, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom]))}, init-canvas! {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space/src/space/core.cljs", :line 20, :column 8, :end-line 20, :end-column 20, :private true, :arglists (quote ([]))}, :private true, :name space.core/init-canvas!, :variadic false, :file "src/space/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cvs-info {:name space.core/cvs-info, :file "src/space/core.cljs", :line 25, :column 1, :end-line 25, :end-column 14, :meta {:file "/home/linyxus/dev/clojure/space/src/space/core.cljs", :line 25, :column 6, :end-line 25, :end-column 14}, :tag any}, ctxt {:name space.core/ctxt, :file "src/space/core.cljs", :line 26, :column 1, :end-line 26, :end-column 10, :meta {:file "/home/linyxus/dev/clojure/space/src/space/core.cljs", :line 26, :column 6, :end-line 26, :end-column 10}, :tag any}, handle-click {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space/src/space/core.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([e])), :doc "Handles the click event."}, :name space.core/handle-click, :variadic false, :file "src/space/core.cljs", :end-column 19, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e])), :doc "Handles the click event."}, on-js-reload {:protocol-inline nil, :meta {:file "/home/linyxus/dev/clojure/space/src/space/core.cljs", :line 45, :column 7, :end-line 45, :end-column 19, :arglists (quote ([]))}, :name space.core/on-js-reload, :variadic false, :file "src/space/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:width :ctx :height :text}, :order [:text :width :height :ctx]}, :doc nil}